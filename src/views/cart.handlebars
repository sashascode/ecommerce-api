<div class="bg-white">
    <div class="mx-auto max-w-2xl px-4 py-16 sm:px-6 sm:py-24 lg:max-w-7xl lg:px-8">
        <div class="flex-1 overflow-y-auto px-4 py-6 sm:px-6">
            <div class="flex items-start justify-between">
                <h2 class="text-lg font-medium text-gray-900" id="slide-over-title">Shopping cart</h2>
            </div>

            {{#if cart.products}}
                {{#each cart.products}}
                    <div class="mt-8">
                        <div class="flow-root">
                            <ul role="list" class="-my-6 divide-y divide-gray-200">
                                <li class="flex py-6">
                                    <div class="h-24 w-24 flex-shrink-0 overflow-hidden rounded-md border border-gray-200">
                                        <img src="{{this.id.thumbnail}}" alt="Salmon orange fabric pouch with match zipper, gray zipper pull, and adjustable hip belt." class="h-full w-full object-cover object-center">
                                    </div>

                                    <div class="ml-4 flex flex-1 flex-col">
                                        <div>
                                            <div class="flex justify-between text-base font-medium text-gray-900">
                                                <h3>
                                                    <a href="#">{{this.id.title}}</a>
                                                </h3>
                                                <p class="ml-4">${{this.id.price}}</p> 
                                            </div>

                                            <div class="flex justify-between text-base font-medium text-gray-900">
                                                <p class="mt-1 text-sm text-gray-500">{{this.id.description}}</p>
                                                <button type="button" onclick="deleteFromCart('{{this.id._id}}')" class="flex mt-2 justify-center rounded-md bg-red-600 px-2 py-1 text-sm font-semibold leading-6 text-white shadow-sm hover:bg-red-500 focus-visible:outline focus-visible:outline-2 focus-visible:outline-offset-2 focus-visible:outline-red-600">
                                                    <svg xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24" stroke-width="1.5" stroke="currentColor" class="w-6 h-6">
                                                        <path stroke-linecap="round" stroke-linejoin="round" d="m14.74 9-.346 9m-4.788 0L9.26 9m9.968-3.21c.342.052.682.107 1.022.166m-1.022-.165L18.16 19.673a2.25 2.25 0 0 1-2.244 2.077H8.084a2.25 2.25 0 0 1-2.244-2.077L4.772 5.79m14.456 0a48.108 48.108 0 0 0-3.478-.397m-12 .562c.34-.059.68-.114 1.022-.165m0 0a48.11 48.11 0 0 1 3.478-.397m7.5 0v-.916c0-1.18-.91-2.164-2.09-2.201a51.964 51.964 0 0 0-3.32 0c-1.18.037-2.09 1.022-2.09 2.201v.916m7.5 0a48.667 48.667 0 0 0-7.5 0" />
                                                    </svg>
                                                </button>
                                            </div>
                                        </div>
                                        <div class="flex flex-1 items-end justify-between text-sm">
                                            <p class="text-gray-500">Qty {{this.quantity}}</p>
                                        </div>
                                    </div>
                                </li>
                            </ul>
                        </div>
                    </div>
                {{/each}}
            {{/if}}

            <div class="px-4 py-6 sm:px-6">
                <div class="flex justify-between text-base font-medium text-gray-900">
                    <p>Subtotal</p>
                    <p id="cart-subtotal">${{ getCartSubtotal cart.products }}</p>
                </div>
                <p class="mt-0.5 text-sm text-gray-500">Shipping and taxes calculated at checkout.</p>
                <div class="mt-6">
                    <a href="#" onclick="createPaymentIntent();" class="flex items-center justify-center rounded-md border border-transparent bg-indigo-600 px-6 py-3 text-base font-medium text-white shadow-sm hover:bg-indigo-700">Checkout</a>
                </div>
                <div class="mt-6 flex justify-center text-center text-sm text-gray-500">
                    <p>
                        or
                        <button style="z-index: 999; position:relative;" onclick="continueShopping(); return false;" type="button" class="font-medium text-indigo-600 hover:text-indigo-500">
                            Continue Shopping
                            <span aria-hidden="true"> &rarr;</span>
                        </button>
                    </p>
                </div>
            </div>
        </div>
    </div>
</div>

<script src="/socket.io/socket.io.js"></script>
<script>
    const socket = io();
    let stripe = Stripe('pk_test_51Ozj9gP8IOvd9pgGg9mInILavBubPRTroLG0DmZnTz8FYB2TKmdjyRjhvubzDAtWIv4NTUK484oClKakQp6evpSd00ezoKPPHZ');

    const deleteFromCart = (pid) => {
        var url = window.location.href;
        var cartId = url.substring(url.lastIndexOf('/') + 1);
        
        fetch(`/api/cart/${cartId}/products/${pid}`, {
            method: 'DELETE',
            headers: {
                'Content-Type': 'application/json'
            }
        })
        .then(res => {
            if (res.status == 200) {
                window.location.reload();
            } else {
                alert('Something went wrong');
            }
        })
        .catch(err => {
            console.log(err);
            alert('Something went wrong');
        })
    }

    const continueShopping = () => {
        window.location.href = "/view/products/";
    }
    
    const placeOrder = async () => {
        let user = sessionStorage.getItem('user') ? JSON.parse(sessionStorage.getItem('user')) : null;
   
        if (!user) {
            user = await getCurrentUser();
            if(user && user.status == "success") sessionStorage["user"] = JSON.stringify(user);
        }

        if (user && user.status == "success") {
            user = user.payload;

            await fetch(`/api/cart/${user.cart}/purchase`, {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json'
                },
                body: JSON.stringify({
                    user: user.email
                })
            })
            .then(res => res.json())
            .then(data => {
                if (data.error) {
                    alert(data.error);
                } else {
                    alert('Order placed successfully');
                    window.location.href = "/view/products/";
                }
            })
            .catch(err => {
                console.log(err);
                alert('Something went wrong');
            })
        } else {
            alert('Please login to place an order');
        }

    }

    const createPaymentIntent = async () => {
        let amount = document.getElementById('cart-subtotal').innerText.slice(1);

        return fetch('/api/payment/payment-intent', {
            method: 'POST',
            headers: {
                'Content-Type': 'application/json'
            },
            body: JSON.stringify({
                amount: amount,
                currency: 'usd'
            })
        })
        .then(res => res.json())
        .then(data => {
            console.log("paymentIntent response: ", data);
            sessionStorage.setItem('stripeClientSecret', data.payload.client_secret);
            window.location.href = "/view/checkout";
        })
        .catch(err => {
            console.log(err);
            return null;
        })
    }
</script>